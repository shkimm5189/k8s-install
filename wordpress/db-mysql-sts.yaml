apiVersion: apps/v1

kind: StatefulSet

metadata:

  name: mydb

spec:

  selector:

    matchLabels:
      
      app: wordpress
      db: mydb
  serviceName: mydb

  replicas: 2 

  template:

    metadata:

      labels:
        
        app: wordpress
        db: mydb
        
    spec:

      initContainers:
      
      - name: init-mysql

        image: mysql:5.7
        command:

        - bash

        - "-c"

        - |

          set -ex

          [[ `hostname` =~ -([0-9]+)$ ]] || exit 1

          ordinal=${BASH_REMATCH[1]}

          echo [mysqld] > /mnt/conf.d/server-id.cnf

          echo server-id=$((100 + $ordinal)) >> /mnt/conf.d/server-id.cnf

          if [[ $ordinal -eq 0 ]]; then

            cp /mnt/config-map/master.cnf /mnt/conf.d/

          else

            cp /mnt/config-map/slave.cnf /mnt/conf.d/

          fi

        volumeMounts:

        - name: conf

          mountPath: /mnt/conf.d

        - name: config-map

          mountPath: /mnt/config-map

      - name: clone-mysql

        image: gcr.io/google-samples/xtrabackup:1.0
        command:

        - bash

        - "-c"

        - |

          set -ex

          [[ -d /var/lib/mysql/mysql ]] && exit 0

          [[ `hostname` =~ -([0-9]+)$ ]] || exit 1

          ordinal=${BASH_REMATCH[1]}

          [[ $ordinal -eq 0 ]] && exit 0

          ncat --recv-only mydb-$(($ordinal-1)).mydb 3307 | xbstream -x -C /var/lib/mysql

          xtrabackup --prepare --target-dir=/var/lib/mysql

        volumeMounts:

        - name: data

          mountPath: /var/lib/mysql

          subPath: mysql

        - name: conf

          mountPath: /etc/mysql/conf.d

      containers:

      - name: mysql

        image: mysql:5.7
        env:

        - name: MYSQL_ALLOW_EMPTY_PASSWORD

          value: "1"

        ports:

        - name: mysql

          containerPort: 3306

        volumeMounts:

        - name: data

          mountPath: /var/lib/mysql

          subPath: mysql

        - name: conf

          mountPath: /etc/mysql/conf.d

        livenessProbe:

          exec:

            command: ["mysqladmin", "ping"]

          initialDelaySeconds: 30

          periodSeconds: 10

          timeoutSeconds: 10

        readinessProbe:

          exec:

            command: ["mysql", "-h", "127.0.0.1", "-e", "SELECT 1"]

          initialDelaySeconds: 5

          periodSeconds: 3

          timeoutSeconds: 1

      - name: xtrabackup

        image: gcr.io/google-samples/xtrabackup:1.0
        ports:

        - name: xtrabackup

          containerPort: 3307

        command:

        - bash

        - "-c"

        - |

          set -ex

          cd /var/lib/mysql

 

          if [[ -f xtrabackup_slave_info && "x$(<xtrabackup_slave_info)" != "x" ]]; then

            cat xtrabackup_slave_info | sed -E 's/;$//g' > change_master_to.sql.in

            rm -f xtrabackup_slave_info xtrabackup_binlog_info

          elif [[ -f xtrabackup_binlog_info ]]; then

            [[ `cat xtrabackup_binlog_info` =~ ^(.*?)[[:space:]]+(.*?)$ ]] || exit 1

            rm -f xtrabackup_binlog_info xtrabackup_slave_info

            echo "CHANGE MASTER TO MASTER_LOG_FILE='${BASH_REMATCH[1]}',\

                  MASTER_LOG_POS=${BASH_REMATCH[2]}" > change_master_to.sql.in

          fi

 

          if [[ -f change_master_to.sql.in ]]; then

            echo "Waiting for mysqld to be ready (accepting connections)"

            until mysql -h 127.0.0.1 -e "SELECT 1"; do sleep 1; done

 

            echo "Initializing replication from clone position"

            mysql -h 127.0.0.1 \

                  -e "$(<change_master_to.sql.in), \

                          MASTER_HOST='mydb-0.mydb', \

                          MASTER_USER='root', \

                          MASTER_PASSWORD='', \

                          MASTER_CONNECT_RETRY=10; \

                        START SLAVE;" || exit 1

            mv change_master_to.sql.in change_master_to.sql.orig

          fi

 

          exec ncat --listen --keep-open --send-only --max-conns=1 3307 -e "xtrabackup --backup --slave-info --stream=xbstream --host=127.0.0.1 --user=root"

        volumeMounts:

        - name: data

          mountPath: /var/lib/mysql

          subPath: mysql

        - name: conf

          mountPath: /etc/mysql/conf.d

      volumes:

      - name: conf

        emptyDir: {}

      - name: config-map

        configMap:

          name: mydb-config

  volumeClaimTemplates:

  - metadata:

      name: data

    spec:

      accessModes: ["ReadWriteOnce"]

      resources:

        requests:

          storage: 1Gi
